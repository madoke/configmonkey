openapi: 3.0.3
info:
  title: Configmonkey - API Reference
  version: 0.0.1
tags:
  - name: Applications
    description: CRUD over aplications
  - name: Environments
    description: CRUD over environments
  - name: Configurations
    description: CRUD over configurations
paths:
  /v1/apps:
    get:
      tags:
        - Applications
      summary: Get applications
      description: Returns a paginated list containing available applications. Navigation can be done by adjusting the limit and offset parameters
      operationId: getApplications
      parameters:
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/Offset"
      responses:
        "200":
          description: Applications retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Application"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
              examples:
                "Page with elements":
                  value:
                    data:
                      - name: Configmonkey
                        slug: configmonkey
                        created_at: "2023-08-13T00:00:00Z"
                        updated_at: "2023-08-13T00:00:00Z"
                      - name: Foo
                        slug: foo
                        created_at: "2023-08-13T00:00:00Z"
                        updated_at: "2023-08-13T00:00:00Z"
                    pagination:
                      count: 2
                      offset: 2
                      limit: 2
                      next: /v1/apps?limit=2&offset=2
                      prev: /v1/apps?limit=2&offset=0
                "Empty Page":
                  value:
                    data: []
                    pagination:
                      count: 0
                      offset: 0
                    limit: 10
    post:
      tags:
        - Applications
      summary: Create a new application
      description: Create a new application
      operationId: createApplication
      requestBody:
        description: Create a new application
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateApplication"
        required: true
      responses:
        "201":
          description: Application created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Application"
  /v1/apps/{app_slug}:
    parameters:
      - $ref: "#/components/parameters/ApplicationSlug"

    delete:
      tags:
        - Applications
      summary: Delete existing application
      description: Delete existing application
      operationId: deleteApplication
      responses:
        "204":
          description: Application Deleted Successfully
  /v1/envs/{app_slug}:
    parameters:
      - $ref: "#/components/parameters/ApplicationSlug"

    get:
      tags:
        - Environments
      summary: List available environments
      description: List available environments
      operationId: getEnvironments
      responses:
        "200":
          description: Environments retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Environment"
    post:
      tags:
        - Environments
      summary: Create a new environment
      description: Create a new environment
      operationId: createEnvironments
      requestBody:
        description: Create a new environment
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEnvironment"
        required: true
      responses:
        "201":
          description: Environment created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Environment"
  /v1/envs/{app_slug}/{env_slug}:
    parameters:
      - $ref: "#/components/parameters/ApplicationSlug"
      - $ref: "#/components/parameters/EnvironmentSlug"

    delete:
      tags:
        - Environments
      summary: Delete existing environment
      description: Delete existing environment
      operationId: deleteEnvironment
      responses:
        "204":
          description: Environment Deleted Successfully
      parameters:
        - $ref: "#/components/parameters/ApplicationSlug"
  /v1/configs/{app_slug}/{env_slug}:
    parameters:
      - $ref: "#/components/parameters/ApplicationSlug"
      - $ref: "#/components/parameters/EnvironmentSlug"
    get:
      tags:
        - Configurations
      summary: Get environment configuration properties
      description: Get environment configuration properties
      operationId: getConfigurations
      responses:
        "200":
          description: Configuration retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Configuration"
    post:
      tags:
        - Configurations
      summary: Create a new configuration
      description: Create a new configuration
      operationId: createConfiguration
      requestBody:
        description: Create a new configuration
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateConfiguration"
        required: true
      responses:
        "201":
          description: Configuration created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Configuration"
    delete:
      tags:
        - Configurations
      summary: Delete existing configuration
      description: Delete existing configuration
      operationId: deleteConfiguration
      responses:
        "204":
          description: Configuration Deleted Successfully
components:
  parameters:
    ApplicationSlug:
      name: app_slug
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/ApplicationSlug"
    EnvironmentSlug:
      name: env_slug
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/EnvironmentSlug"
    Offset:
      name: offset
      in: query
      required: false
      description: Maximum entries to skip
      schema:
        $ref: "#/components/schemas/Offset"
    Limit:
      name: limit
      in: query
      required: false
      description: Maximum entries to request
      schema:
        $ref: "#/components/schemas/Limit"
  schemas:
    Name:
      type: string
      pattern: '^\w+(\s+\w+)*$'
      description: The name of a given resource. Only supports word characters and whitespaces
      examples:
        - Config Monkey
        - Configmonkey01
    Slug:
      type: string
      pattern: '^[a-z0-9\-]+$'
      description: The slug (URI) of a given resource. Only supports lowercase alphanumeric characters and dashes (`-`)
      examples:
        - config-monkey
        - configmonkey01
    Date:
      type: string
      format: date-time
      description: Dates are represented in the UTC timezone using the ISO 8601 format
      example: 2023-08-13T00:00:00Z
    Limit:
      type: integer
      format: int32
      description: Maximum entries requested or to request
      example: 5
    Offset:
      type: integer
      format: int32
      description: Number of entries skipped or to skip
      example: 5
    Pagination:
      type: object
      properties:
        count:
          type: integer
          format: int32
          description: Total entries returned
          example: 5
        offset:
          allOf:
            - $ref: "#/components/schemas/Offset"
          description: Maximum entries skipped
        limit:
          allOf:
            - $ref: "#/components/schemas/Limit"
          description: Maximum entries requested
        next:
          type: string
          description: URI path to the next page
          example: "/v1/apps?limit=5&offset=10"
        prev:
          type: string
          description: URI path to the previous page
          example: "/v1/apps?limit=15&offset=0"
    ApplicationName:
      allOf:
        - $ref: "#/components/schemas/Name"
      description: The application's name
      example: Configmonkey
    ApplicationSlug:
      allOf:
        - $ref: "#/components/schemas/Slug"
      description: The application's unique slug
      example: configmonkey
    EnvironmentName:
      allOf:
        - $ref: "#/components/schemas/Name"
      description: The environment's name
      example: Production
    EnvironmentSlug:
      allOf:
        - $ref: "#/components/schemas/Slug"
      description: The environment's unique slug
      example: production
    ConfigurationValue:
      type: string
      format: json
      example:
        key1: value1
        key2: value2
    CreateApplication:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ApplicationName"
        slug:
          $ref: "#/components/schemas/ApplicationSlug"
    Application:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ApplicationName"
        slug:
          $ref: "#/components/schemas/ApplicationSlug"
        created_at:
          allOf:
            - $ref: "#/components/schemas/Date"
          description: Date when the application was created
        updated_at:
          allOf:
            - $ref: "#/components/schemas/Date"
          description: Date when the application was last updated
    CreateEnvironment:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/EnvironmentName"
        slug:
          $ref: "#/components/schemas/EnvironmentSlug"
    Environment:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/EnvironmentName"
        slug:
          $ref: "#/components/schemas/EnvironmentSlug"
        created_at:
          allOf:
            - $ref: "#/components/schemas/Date"
          description: Date when the environment was created
        updated_at:
          allOf:
            - $ref: "#/components/schemas/Date"
          description: Date when the environment was last updated
    CreateConfiguration:
      $ref: "#/components/schemas/ConfigurationValue"
    Configuration:
      type: object
      properties:
        config:
          $ref: "#/components/schemas/ConfigurationValue"
        created_at:
          allOf:
            - $ref: "#/components/schemas/Date"
          description: Date when the configuration was created
        updated_at:
          allOf:
            - $ref: "#/components/schemas/Date"
          description: Date when the configuration was last updated

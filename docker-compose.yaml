# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "app".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  app:
    build:
      context: .
      target: final
    ports:
      - 8000:8000
    profiles: ["full"]
    environment:
      - ROCKET_ADDRESS="0.0.0.0"
    depends_on:
      db:
        condition: service_healthy

  # The commented out section below is an example of how to define a PostgreSQL
  # database that your application can use. `depends_on` tells Docker Compose to
  # start the database before your application. The `db-data` volume persists the
  # database data between container restarts. The `db-password` secret is used
  # to set the database password. You must create `db/password.txt` and add
  # a password of your choosing to it before running `docker-compose up`.
  db:
    image: postgres
    restart: always
    user: postgres
    profiles: ["deps-only", "full"]
    environment:
      - POSTGRES_DB=configmonkey
      - POSTGRES_PASSWORD=configmonkey
    ports:
      - 5432:5432
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    restart: always
    profiles: ["deps-only", "full"]
    ports:
      - 8080:8080
